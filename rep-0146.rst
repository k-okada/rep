REP: 146
Title: ROS Robot Parameter Naming Convention
Author: Kei Okada <k-okada@jsk.t.u-tokyo.ac.jp>
Status: Draft
Type: Informational
Content-Type: text/x-rst
Created: 31-Jly-2015
Post-History:

Abstract
========

This REP aims to define the best practices for robot related parameter
name space for making robot-agnostic packages.


Motivation
==========

As the number of ROS-supported robot increases, we will write
robot-agnostic packages, but still they need robot-specific
information as calibration parameters.

A `robot_description` parameter is widely shared naming convention
among ROS community and this REP proposes such conventions for robot specific information on
parameter, so application program can build their program on top of that.


Specifications
==============

Parameters
----------

robot_description
'''''''''''''''''

`robot_description` stores robot kinematics / geometry information using
URDF format.


robot_type
''''''''''

`robot_type` stores robot type in lower cases, for example 'pr2' in PR2 robot case [1], 'pepper' in Pepper robot case and 'fetch' in Fetch robot cases. This could be regarded as manufacturer's model name.


robot_name
''''''''''

`robot_name` stores robot name, default pr2 name is 'robot' [1], which is given individual name to the robot. So robot name of 'pr2' robot type could be 'james', 'gutsy' etc...

robot/info
''''''''''

`robot_info` stores any other characteristics of the robot in YAML dict type, including type, serial number, owner name / email address, timezone, language it uses ...

Examples
========


Example behaviors::

    $ rosparam get robot_name
    olive
    $ rosparam get robot_type
    pepper
    $ rosparam get robot_info
    {serial number: 00000000, owner name : Kei Okada, language: Japanese,....}

References
==========

.. [1] PR2 robot.yaml
   (https://github.com/pr2-debs/pr2-core/blob/master/root/etc/ros/robot.yaml)

Copyright
=========

This document has been placed in the public domain.
